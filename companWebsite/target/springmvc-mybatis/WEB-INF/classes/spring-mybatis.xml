<?xml version="1.0" encoding="UTF-8"?>
  <beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
      xmlns:context="http://www.springframework.org/schema/context"
      xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
      xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
             http://www.springframework.org/schema/mvc
             http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
             http://www.springframework.org/schema/context
             http://www.springframework.org/schema/context/spring-context-3.0.xsd
             http://www.springframework.org/schema/aop
             http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
             http://www.springframework.org/schema/tx
             http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">
     <!-- 扫描service -->
     <context:component-scan base-package="com.sun.szk.ssm.service"/>
     <!-- 分解配置 jdbc.properites -->
     <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
     
     <!-- 数据库配置信息 -->
     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
         <property name="driverClassName" value="${jdbc.driver}"/>
         <property name="url" value="${jdbc.url}"/>
         <property name="username" value="${jdbc.username}"/>
         <property name="password" value="${jdbc.password}"/>
         <property name="validationQuery" value="${jdbc.validation.query}"/>
         <property name="testWhileIdle" value="true"/>
         <property name="timeBetweenEvictionRunsMillis" value="3600000"/>
         <property name="minEvictableIdleTimeMillis" value="1800000"/>
         <property name="testOnBorrow" value="true"/>
     </bean>
     <!-- sessionFactory 将spring和mybatis整合 -->
     <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
         <property name="dataSource" ref="dataSource" />  
         <property name="configLocation" value="classpath:mybatis.xml"/>   
         <property name="mapperLocations" value="classpath:com.sun.szk.ssm.mapping.*.xml" />
     </bean>
     <!-- 自动扫描 将Mapper接口生成代理注入到Spring-->
     <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" autowire="byName">  
         <property name="basePackage" value="com.sun.szk.ssm.mapping" />  
         <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
     </bean>
     <!-- 配置事物 (事务管理)transaction manager, use JtaTransactionManager for global tx --> 
     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
         <property name="dataSource" ref="dataSource" />  
     </bean>
     
     <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
         <tx:attributes>
             <tx:method name="add*" propagation="REQUIRED" />
             <tx:method name="append*" propagation="REQUIRED" />
             <tx:method name="insert*" propagation="REQUIRED" />
             <tx:method name="save*" propagation="REQUIRED" />
             <tx:method name="update*" propagation="REQUIRED" />
             <tx:method name="modify*" propagation="REQUIRED" />
             <tx:method name="edit*" propagation="REQUIRED" />
             <tx:method name="delete*" propagation="REQUIRED" />
             <tx:method name="remove*" propagation="REQUIRED" />
             <tx:method name="repair" propagation="REQUIRED" />
             <tx:method name="delAndRepair" propagation="REQUIRED" />
             
             <tx:method name="get*" propagation="SUPPORTS" />
             <tx:method name="find*" propagation="SUPPORTS" />
             <tx:method name="load*" propagation="SUPPORTS" />
             <tx:method name="search*" propagation="SUPPORTS" />
             <tx:method name="datagrid*" propagation="SUPPORTS" />
             
             <tx:method name="*" propagation="SUPPORTS" />
         </tx:attributes>
     </tx:advice>
     
     <!-- 定义一个切面,在定义的切面上加入事物 -->
     <!-- <aop:config>
         <aop:pointcut id="transactionPointcut" expression="execution(* com.iflytek.extjs.service..*Impl.*(..))" />
         <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
     </aop:config> -->
</beans>